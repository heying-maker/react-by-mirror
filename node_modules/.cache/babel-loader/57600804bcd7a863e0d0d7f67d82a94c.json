{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport mirror, { connect } from 'mirrorx';\nimport model from './model';\nimport Mytest from './index';\nmirror.model(model);\nmirror.hook((action, getState) => {\n  const {\n    routing: {\n      location\n    }\n  } = getState(); // if (action.type === \"@@router/LOCATION_CHANGE\" && location.pathname === '/ems/archivalipment') {\n  //   actions.archivalipment.load();\n  // }\n});\nexport const Mytest_ = connect(state => state.mytest)(Mytest);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Mytest_, \"Mytest_\", \"/Users/admin/Desktop/\\u9E64\\u5F71/newapp/src/pages/content/mytest/container.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/admin/Desktop/鹤影/newapp/src/pages/content/mytest/container.js"],"names":["mirror","connect","model","Mytest","hook","action","getState","routing","location","Mytest_","state","mytest"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,IAAiBC,OAAjB,QAAgC,SAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACAH,MAAM,CAACE,KAAP,CAAaA,KAAb;AAEAF,MAAM,CAACI,IAAP,CAAY,CAACC,MAAD,EAASC,QAAT,KAAsB;AAC9B,QAAM;AAACC,IAAAA,OAAO,EAAE;AAACC,MAAAA;AAAD;AAAV,MAAwBF,QAAQ,EAAtC,CAD8B,CAE9B;AACA;AACA;AACH,CALD;AAOA,OAAO,MAAMG,OAAO,GAAER,OAAO,CAACS,KAAK,IAAIA,KAAK,CAACC,MAAhB,CAAP,CAA+BR,MAA/B,CAAf;;;;;;;;;;0BAAMM,O","sourcesContent":["import mirror, { connect } from 'mirrorx';\nimport model from './model';\nimport Mytest from './index';\nmirror.model(model);\n\nmirror.hook((action, getState) => {\n    const {routing: {location}} = getState();\n    // if (action.type === \"@@router/LOCATION_CHANGE\" && location.pathname === '/ems/archivalipment') {\n    //   actions.archivalipment.load();\n    // }\n})\n\nexport const Mytest_= connect(state => state.mytest)(Mytest);"]},"metadata":{},"sourceType":"module"}